name: Build Windows

#on:
#  create:
#    tags:
#      - '*'
on:
  workflow_dispatch:

jobs:  
  build-windows:
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Create .npmrc file
        run: |
          echo "registry=https://registry.yarnpkg.com/" > .npmrc
          echo "@internxt:registry=https://npm.pkg.github.com" >> .npmrc
          # You cannot read packages from other private repos with GITHUB_TOKEN
          # You have to use a PAT instead https://github.com/actions/setup-node/issues/49
          echo //npm.pkg.github.com/:_authToken=${{ secrets.PERSONAL_ACCESS_TOKEN }} >> .npmrc
          echo "always-auth=true" >> .npmrc
      - name: Create .env file
        run: |
          touch .env
          echo "CRYPTO_KEY=6KYQBP847D4ATSFA" >> .env
          echo "MAGIC_IV=uB5xL72szFpJmjVn2reHN8T2WAVg2yXw" >> .env
          echo "MAGIC_SALT=qEN1W5R2MNVJKSWx47mZpIkdqwilhazfnhp74f3vEAF05w5j4X0ghfwtJhNmUYDjN7H64VIw91X4ZZYUep1zic9MRCCIiYKVXLkwupvmEhvQv6nbelTBtXn10WVPEYZL" >> .env
          echo "NEW_CRYPTO_KEY=WZOuIHK0S1vFjjMc" >> .env
          echo "API_URL=https://desktop.internxt.com" >> .env
          echo "BRIDGE_URL=https://api.internxt.com" >> .env
          echo "APP_SEGMENT_KEY=Mf8sJnBfm3HKNt3RpQ8I5PPwjtoeAZK6" >> .env
          echo "APP_SEGMENT_KEY_TEST=81naPdzAMHb8Sw5HZQb3xSa4yPtE70Op" >> .env
          echo "BUG_REPORTING_URL=https://desktop-bug-reporting.inxt.workers.dev" >> .env
          echo "NOTIFICATIONS_URL=https://notifications.internxt.com" >> .env
          echo "LOCK_REFRESH_INTERVAL=20000" >> .env
          echo "RUDDERSTACK_KEY=2G7EO1sNe5RTn8qjzSdBS6XJ8Wg" >> .env
          echo "RUDDERSTACK_DATA_PLANE_URL=https://cdp.internxt.com/v1/batch" >> .env
      - name: Install Chocolatey
        shell: pwsh
        run: |
          Set-ExecutionPolicy Bypass -Scope Process -Force
          [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072
          iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'))
      - name: Install GraphicsMagick
        run: |
          choco install graphicsmagick
      - name: Add GraphicsMagick path
        shell: pwsh
        run: |
          $env:Path += ";C:\Program Files\GraphicsMagick-1.3.36-Q16"
      - name: Install node
        shell: pwsh
        run: |
          Invoke-WebRequest -Uri https://nodejs.org/dist/v16.14.0/node-v16.14.0-x64.msi -OutFile nodejs.msi
          Start-Process msiexec.exe -Wait -ArgumentList '/I nodejs.msi /quiet /norestart'
      - name: Install YubiKey
        shell: pwsh
        run: |
          Invoke-WebRequest -Uri "https://developers.yubico.com/yubikey-manager-qt/Releases/yubikey-manager-qt-1.2.5-win64.exe" -OutFile "yubikey-manager-qt-1.2.5-win64.exe"
          Start-Process .\yubikey-manager-qt-1.2.5-win64.exe -ArgumentList "/S /D=C:\Program Files\Yubico\YubiKey Manager" -Wait
      - name: Install Start Run
        run: |        
          yarn install --network-timeout 1000000
      - name: Publish releases
        shell: pwsh
        env:
          # These values are used for auto updates signing
          APPLE_ID: ${{ secrets.APPLE_ID }}
          APPLE_ID_PASS: ${{ secrets.APPLE_ID_PASS }}
          CSC_LINK: ${{ secrets.CSC_LINK }}
          CSC_KEY_PASSWORD: ${{ secrets.CSC_KEY_PASSWORD }}
          # This is used for uploading release assets to github
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          npm run postinstall
          npm run package
      - name: Check file 
        run: |
          ls release/build/
