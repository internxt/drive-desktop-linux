name: Build

#on:
#  create:
#    tags:
#      - '*'
on:
  workflow_dispatch:

jobs:
  build-ubuntu:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Create .env file
        run: |
          touch .env
          echo "CRYPTO_KEY=${{ secrets.CRYPTO_KEY }}" >> .env
          echo "MAGIC_IV=${{ secrets.MAGIC_IV }}" >> .env
          echo "MAGIC_SALT=${{ secrets.MAGIC_SALT }}" >> .env
          echo "NEW_CRYPTO_KEY=${{ secrets.NEW_CRYPTO_KEY }}" >> .env
          echo "API_URL=https://desktop.internxt.com" >> .env
          echo "NEW_DRIVE_URL=https://api.internxt.com" >> .env
          echo "DRIVE_URL=https://drive.internxt.com" >> .env
          echo "BRIDGE_URL=https://api.internxt.com" >> .env
          echo "APP_SEGMENT_KEY=${{ secrets.APP_SEGMENT_KEY }}" >> .env
          echo "APP_SEGMENT_KEY_TEST=${{ secrets.APP_SEGMENT_KEY_TEST }}" >> .env
          echo "BUG_REPORTING_URL=https://desktop-bug-reporting.inxt.workers.dev" >> .env
          echo "NOTIFICATIONS_URL=https://notifications.internxt.com" >> .env
          echo "LOCK_REFRESH_INTERVAL=20000" >> .env
          echo "PHOTOS_URL=https://photos.internxt.com/api" >> .env
          echo "DRIVE_API_URL=https://drive.internxt.com/api" >> .env
          echo "RUDDERSTACK_KEY=${{ secrets.RUDDERSTACK_KEY }}" >> .env
          echo "RUDDERSTACK_DATA_PLANE_URL=${{ secrets.RUDDERSTACK_DATA_PLANE_URL }}" >> .env
      - name: Install graphicsmagick
        run: |
          sudo apt-get update
          sudo apt-get install -y graphicsmagick
      - name: Install Start Run
        run: |
          npm install 
          npm run package
      - name: Publish releases
        env:
          # These values are used for auto updates signing
          APPLE_ID: ${{ secrets.APPLE_ID }}
          APPLE_ID_PASS: ${{ secrets.APPLE_ID_PASS }}
          CSC_LINK: ${{ secrets.CSC_LINK }}
          CSC_KEY_PASSWORD: ${{ secrets.CSC_KEY_PASSWORD }}
          # This is used for uploading release assets to github
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          yarn run postinstall
          yarn run build
          yarn run publish
          
  build-macos:
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Create .env file
        run: |
          touch .env
          echo "CRYPTO_KEY=${{ secrets.CRYPTO_KEY }}" >> .env
          echo "MAGIC_IV=${{ secrets.MAGIC_IV }}" >> .env
          echo "MAGIC_SALT=${{ secrets.MAGIC_SALT }}" >> .env
          echo "NEW_CRYPTO_KEY=${{ secrets.NEW_CRYPTO_KEY }}" >> .env
          echo "API_URL=https://desktop.internxt.com" >> .env
          echo "NEW_DRIVE_URL=https://api.internxt.com" >> .env
          echo "DRIVE_URL=https://drive.internxt.com" >> .env
          echo "BRIDGE_URL=https://api.internxt.com" >> .env
          echo "APP_SEGMENT_KEY=${{ secrets.APP_SEGMENT_KEY }}" >> .env
          echo "APP_SEGMENT_KEY_TEST=${{ secrets.APP_SEGMENT_KEY_TEST }}" >> .env
          echo "BUG_REPORTING_URL=https://desktop-bug-reporting.inxt.workers.dev" >> .env
          echo "NOTIFICATIONS_URL=https://notifications.internxt.com" >> .env
          echo "LOCK_REFRESH_INTERVAL=20000" >> .env
          echo "PHOTOS_URL=https://photos.internxt.com/api" >> .env
          echo "DRIVE_API_URL=https://drive.internxt.com/api" >> .env
          echo "RUDDERSTACK_KEY=${{ secrets.RUDDERSTACK_KEY }}" >> .env
          echo "RUDDERSTACK_DATA_PLANE_URL=${{ secrets.RUDDERSTACK_DATA_PLANE_URL }}" >> .env
      - name: Install graphicsmagick
        run: |
          brew install graphicsmagick
          /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
      - name: Install Start Run 
        run: |
          yarn install
          yarn run package
      - name: Publish releases
        env:
          # These values are used for auto updates signing
          APPLE_ID: ${{ secrets.APPLE_ID }}
          APPLE_ID_PASS: ${{ secrets.APPLE_ID_PASS }}
          CSC_LINK: ${{ secrets.CSC_LINK }}
          CSC_KEY_PASSWORD: ${{ secrets.CSC_KEY_PASSWORD }}
          # This is used for uploading release assets to github
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          yarn run postinstall
          yarn run build
          yarn run publish
  
  build-windows:
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Create .env file
        run: |
          touch .env
          echo "CRYPTO_KEY=${{ secrets.CRYPTO_KEY }}" >> .env
          echo "MAGIC_IV=${{ secrets.MAGIC_IV }}" >> .env
          echo "MAGIC_SALT=${{ secrets.MAGIC_SALT }}" >> .env
          echo "NEW_CRYPTO_KEY=${{ secrets.NEW_CRYPTO_KEY }}" >> .env
          echo "API_URL=https://desktop.internxt.com" >> .env
          echo "NEW_DRIVE_URL=https://api.internxt.com" >> .env
          echo "DRIVE_URL=https://drive.internxt.com" >> .env
          echo "BRIDGE_URL=https://api.internxt.com" >> .env
          echo "APP_SEGMENT_KEY=${{ secrets.APP_SEGMENT_KEY }}" >> .env
          echo "APP_SEGMENT_KEY_TEST=${{ secrets.APP_SEGMENT_KEY_TEST }}" >> .env
          echo "BUG_REPORTING_URL=https://desktop-bug-reporting.inxt.workers.dev" >> .env
          echo "NOTIFICATIONS_URL=https://notifications.internxt.com" >> .env
          echo "LOCK_REFRESH_INTERVAL=20000" >> .env
          echo "PHOTOS_URL=https://photos.internxt.com/api" >> .env
          echo "DRIVE_API_URL=https://drive.internxt.com/api" >> .env
          echo "RUDDERSTACK_KEY=${{ secrets.RUDDERSTACK_KEY }}" >> .env
          echo "RUDDERSTACK_DATA_PLANE_URL=${{ secrets.RUDDERSTACK_DATA_PLANE_URL }}" >> .env
      - name: Install Chocolatey
        run: |
          Set-ExecutionPolicy Bypass -Scope Process -Force
          [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072
          iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'))
      - name: Install GraphicsMagick
        run: |
          choco install graphicsmagick
      - name: Add GraphicsMagick path
        run: |
          $env:Path += ";C:\Program Files\GraphicsMagick-1.3.36-Q16"
      - name: Install node
        run: |
          Invoke-WebRequest -Uri https://nodejs.org/dist/v16.14.0/node-v16.14.0-x64.msi -OutFile nodejs.msi
          Start-Process msiexec.exe -Wait -ArgumentList '/I nodejs.msi /quiet /norestart'
      - name: Install YubiKey
        run: |
          Invoke-WebRequest -Uri "https://developers.yubico.com/yubikey-manager-qt/Releases/yubikey-manager-qt-1.2.5-win64.exe" -OutFile "yubikey-manager-qt-1.2.5-win64.exe"
          Start-Process .\yubikey-manager-qt-1.2.5-win64.exe -ArgumentList "/S /D=C:\Program Files\Yubico\YubiKey Manager" -Wait
      - name: Install Start Run
        run: |          
          npm install
          npm run package
      - name: Publish releases
        env:
          # These values are used for auto updates signing
          APPLE_ID: ${{ secrets.APPLE_ID }}
          APPLE_ID_PASS: ${{ secrets.APPLE_ID_PASS }}
          CSC_LINK: ${{ secrets.CSC_LINK }}
          CSC_KEY_PASSWORD: ${{ secrets.CSC_KEY_PASSWORD }}
          # This is used for uploading release assets to github
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          yarn run postinstall
          yarn run build
          yarn run publish

